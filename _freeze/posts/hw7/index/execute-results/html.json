{
  "hash": "74ebe838e4f3e6c2dd3433f9851ceb37",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: hw7\neditor: visual\n---\n\n## 2. 가설 설정\n\n### H0 : mu >= 16.0 \n### H1 : mu < 16.0 \n\n::: {#68394441 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport scipy.stats as stats\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm\n\n```\n:::\n\n\n## 3. 검정통계량 계산\n\n::: {#7783a61c .cell execution_count=2}\n``` {.python .cell-code}\ncar = np.array([15.078, 15.752, 15.549, 15.56, 16.098, 13.277, 15.462, 16.116, 15.214, 16.93, 14.118, 14.927, 15.382, 16.709, 16.804])\n\nmu = 16.0\nn = len(car) # 15개\nx_bar = np.mean(car)\nstd = np.std(car, ddof=1) #표준편차 (ddof=1 -> n-1)\n\nt_s = (x_bar - mu) / (std / np.sqrt(n))\nt_s\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\nnp.float64(-1.8500447456376756)\n```\n:::\n:::\n\n\n# 4. p-value 계산\n\n::: {#8d81185e .cell execution_count=3}\n``` {.python .cell-code}\nfrom scipy.stats import t\n\nfrom scipy.stats import t\np_value = t.cdf(t_s, df=n-1)\np_value\n\nprint(\"p-value는\",p_value, \"이고 p-value가 0.01보다 높아 기각할 수 없다.\")\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\np-value는 0.042762417664207845 이고 p-value가 0.01보다 높아 기각할 수 없다.\n```\n:::\n:::\n\n\n# 6. 95 % 신뢰 구간\n\n::: {#d5de029e .cell execution_count=4}\n``` {.python .cell-code}\nfrom scipy.stats import t\n\ndf = n-1\n\na = x_bar + t.ppf(0.025, df) * (std/np.sqrt(n))\nb = x_bar + t.ppf(0.975, df) * (std/np.sqrt(n))\n\nprint(\"95% 신뢰구간은\",a,\"부터\",b,\"이다\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n95% 신뢰구간은 14.988864240339733 부터 16.074602426326933 이다\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}