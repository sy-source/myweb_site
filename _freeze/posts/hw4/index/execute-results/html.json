{
  "hash": "d6886b0a3a880c5feffa58a3341ea4d8",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: hw4\nauthor: yoon\neditor: visual\n---\n\n# 1. 정규분포 pdf 값을 계산하는 자신만의 파이썬 함수를 정의하고, 정규분포 mu = 3, sigma = 2 의 pdf를 그릴 것.\n\n### def / return 함수를 사용 (scipy.stats 사용 X)\n\n::: {#a5777f4f .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nmu = 3\nsigma = 2\nx = np.linspace(-5, 11, 1000)\n\ndef pdf_a (x, mu, sigma) : return (1 / (np.sqrt(2 * np.pi) * sigma)) * np.exp(-0.5 * ((x - mu) / sigma) ** 2)\n\npdf = pdf_a(x, mu, sigma)\n\n\nplt.plot(x, pdf)\nplt.show()\n\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=587 height=411}\n:::\n:::\n\n\n# 2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오.\n\n## X \\~ N(2, 3\\^2)\n\n### cdf : 누적분포함수\n\n::: {#84e35ec8 .cell execution_count=2}\n``` {.python .cell-code}\nimport scipy.stats as stats\n\nmu = 2\nsigma = 3\n\n# 1) P(X < 3)\nprob_a = stats.norm.cdf(3, loc=mu, scale=3)\nprob_a\n\n# 2) P(2 < X < 5)\nprob_b = stats.norm.cdf(5, loc=mu, scale=3) - stats.norm.cdf(2, loc=mu, scale=sigma)\nprob_b\n\n# 3) P(X < 3 or X > 7)\nprob_c = stats.norm.cdf(3, loc=mu, scale=3) + (1 - stats.norm.cdf(7, loc=mu, scale=sigma))\nprob_c\n\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\nnp.float64(0.678349012091051)\n```\n:::\n:::\n\n\n# 3. LS 빅데이터 스쿨 학생들의 중간고사 점수는 평균이 30이고, 분산이 4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?\n\n### ppf : 퀀타일 함수\n\n::: {#91561397 .cell execution_count=3}\n``` {.python .cell-code}\nimport scipy.stats as stats\n\nmu = 30\nsigma = 2 #표준편차 : 분산의 제곱근\n\nppf = stats.norm.ppf(0.95, loc=30, scale=2) #누적확률 95% -> 상위5% (상위 5% = 하위95%)\n\nppf\n\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\nnp.float64(33.28970725390295)\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}