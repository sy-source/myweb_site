---
title: "hw7"
editor: visual
jupyter: python3
---

## 2. 가설 설정

### H0: μ = 16.0/ H1: μ != 16.0
### 𝐻𝑎 ∶ 𝜇 ≠ 𝜇0 인 경우 2𝑃 (𝑇 ≥ |𝑡|)

```{python}

# H0: μ = 16.0
# H1: μ != 16.0

import numpy as np
import scipy.stats as stats
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import norm


```

## 3. 검정통계량 계산

```{python}

car = np.array([15.078, 15.752, 15.549, 15.56, 16.098, 13.277, 15.462, 16.116, 15.214, 16.93, 14.118, 14.927, 15.382, 16.709, 16.804])

mu = 16.0
n = len(car) # 15개
x_bar = np.mean(car)
std = np.std(car, ddof=1) #표준편차 (ddof=1 -> n-1)

t_s = (x_bar - mu) / (std / np.sqrt(n))
t_s

```

# 4. p-value 계산

```{python}

from scipy.stats import t

# 절대값(abs) 사용하지 않은 경우
a_value = 2 * (1 - t.cdf((t_s), df=n-1))
a_value

# 절대값(abs) 사용 한 경우
p_value = 2 * (1 - t.cdf(abs(t_s), df=n-1))
p_value

print("절대값을 하지 않은 p-value는",a_value,"이고","절대값을 한 p-value는",p_value,"이다" )

```

# 6. 95 % 신뢰 구간

```{python}

from scipy.stats import t

df = n-1

a = x_bar + t.ppf(0.025, df) * (std/np.sqrt(n))
b = x_bar + t.ppf(0.975, df) * (std/np.sqrt(n))

print("95% 신뢰구간은",a,"부터",b,"이다")


```

